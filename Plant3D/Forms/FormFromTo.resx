<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="richTextBox1.Text" xml:space="preserve">
    <value>1 - Para selecionar uma linha, clique no botão "Line".
 Selecione a linha no modelo desejado. Após selecionar 
a linha, selecione o objeto From como indicado no 
cursor do mouse. Por fim, selecione o objeto To para 
finalizar a operação.

2 - Caso o seu objetivo seja relacionar objetos em 
DWGs diferentes, marque a caixa de seleção 
"Outro DWG?" antes de iniciar a operação. Após isso 
realize os passos da primeira instrução novamente até
chegar na seleção do objeto To. Para selecionar o 
objeto To vá para o DWG desejado e clique no botão 
"Object To". Selecione o objeto desejado!

3 - Caso tenha selecionado objetos indesejados, clique 
no botão "Clear Select" para limpar a seleção e refaça a 
operação.</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAnpcAAJ6WAAGflwAIoJgAAaGZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACclQAAnJUAHZyVAJWclQAonJUAAKCYAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnZUAAJ6XAAWblACPmpMA/5uUAKqdlgAQnZYAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ2WAACZkgAAnJUAVZqTAPKakwD/mpMA/JuU
        AIOelwAEnZYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAClnwAAnJUAAJ2VACeblADTmpMA/5qT
        AP+akwD/mpMA8pyVAFuTjwAAnpcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ2WAACdlgALm5QAo5qT
        AP+akwD/mpMA/5qTAP+akwD/mpMA3pyVADiclAAAnJgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACelgAAj4kAAJyV
        AGmakwD4mpMA/5qTAP+akwD/mpMA/5qTAP+akwD/m5QAwp2VAB2clQAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnZYAAJyV
        AACclQA2m5QA4JqTAP+akwD/mpMA/5qTAP+akwD/mpMA/5qTAP+akwD/m5QAnp2WAAudlQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACclQAAnJYAE5uUALaakwD/mpMA/5qTAP+akwD/mpMA/5qTAP+akwD/mpMA/5qTAP+akwD5m5QAdqCZ
        AAKdlgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAnZYAAKKaAAKblAB+mpMA/ZqTAP+akwD/mpMA/5qTAP+akwD/mpMA/5qTAP+akwD/mpMA/5qT
        AP+akwDsnJUAT5mTAACelgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAJ6YAACblAAAnJUAR5qTAOuakwD/mpMA/5qTAP+akwD/mpMA/5qTAP+akwD/mpMA/5qT
        AP+akwD/mpMA/5qTAP+blADWnJUALpuVAACflgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAnJUAAJ2VAB2blADHmpMA/5qTAP+akwD/mpMA/5qTAP+akwD/mpMA/5qT
        AP+akwD/mpMA/5qTAP+akwD/mpMA/5qTAP+blAC3nZYAFpyVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ2WAACelwAGm5QAk5qTAP+akwD/mpMA/5qTAP+akwD/mpMA/5qT
        AP+akwD/mpMA/5qTAP+akwD/mpMA/5qTAP+akwD/mpMA/5qTAP6blACRnpcAB52WAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACclQAAmpMAAJyUAFqakwD0mpMA/5qTAP+akwD/mpMA/5qT
        AP+akwD/mpMA/5qTAP+akwD/mpMA/5qTAP+akwD/mpMA/5qTAP+akwD/mpMA/5qTAPaclQBpv7IAAJ6W
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAo5kAAJyVAACclQAqm5QA15qTAP+akwD/mpMA/5qT
        AP+akwD/mpMA/5qTAP+akwD/mpMA/5qTAP+akwD/mpMA/5qTAP+akwD/mpMA/5uTAP+ckgD/m5IA/5uT
        AOaclQBEm5QAAJ+XAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACdlgAAnZYADJuUAKiakwD/mpMA/5qT
        AP+akwD/mpMA/5qTAP+akwD/mpMA/5qTAP+akwD/mpMA/5qTAP+akwD/mpMA/5uSAP+VlQz/iJkq/4Cc
        Pf+DmzX/kJcX/5uUAs2ikwAmn5QAAMOMAAAAAAAAAAAAAAAAAAAAAAAAnZYAAG1gAACblABumpMA+pqT
        AP+akwD/mpMA/5qTAP+akwD/mpMA/5qTAP+akwD/mpMA/5qTAP+akwD/mpMA/5uTAP+UlQ//cqFc/06v
        sP87tdn/Nrfk/zi24P9Essb/ZKd+/4acMqukkwARmpYMAAAAAAAAAAAAAAAAAJ2UAACblAAAnJUAOpqU
        AOOakwD/mpMA/5qTAP+akwD/mpMA/5qTAP+akwD/mpMA/5qTAP+akwD/mpMA/5qTAP+akwH/hJs1/1Cu
        q/80uOn/Mbnw/zO47f8zuOz/M7jt/zK47v8yuO7/RLLH/FyrlIRmrIoEXq2XAAAAAAAAAAAAnJUAAJ2V
        ABWblAC6mpMA/5qTAP+akwD/mpMA/5qTAP+akwD/mpMA/5qTAP+akwD/mpMA/5qTAP+akwD/m5MA+Hmg
        Tuo+tNP9Mbnv/zO47P8zuOz/M7js/zO47P8zuOz/M7js/zO47P8yuO7/Nrjn8Ta56FY7tNoAM7zxAJ2W
        AAChmgADm5QAg5qTAP2akwD/mpMA/5qTAP+akwD/mpMA/5qTAP+akwD/mpMA/5qTAP+akwD/mpMA/5qT
        APKclAB8S7O7LjG783Yzue3PM7js+zO47P8zuOz/M7js/zO47P8zuOz/M7js/zO47P8zuOz/M7nt1DS7
        8Cc0uu8AmpQAAJyVAEqakwDtmpMA/5qTAP+akwD/mpMA/5qTAP+akwD/mpMA/5qTAP+akwD/mpMA/5qT
        AP+blADlnJUAYJ+ZAASSnB0AQN7/ADS88Rczuu9nM7ntyjO47PszuOz/M7js/zO47P8zuOz/M7js/zO4
        7P8zuOz/M7nuojW98gydlQAkm5QAyZqTAP+akwD/mpMA/5qTAP+akwD/mpMA/5qTAP+akwD/mpMA/5qT
        AP+akwD/m5QAz5yVAEOmngABnpcAAAAAAAAAAAAANcP4ADKs4QA0vPIWNLrvaTO57c4zuOz8M7js/zO4
        7P8zuOz/M7js/zO47P8zuOz3M7ruepyUAKWakwD+mpMA/5qTAP+akwD/mpMA/5qTAP+akwD/mpMA/5qT
        AP+akwD/mpMA+JuUAKedlgAmmZMAAKGZAAAAAAAAAAAAAAAAAAAAAAAAAAAAADXC9gAKLmQANLzxGTO6
        72szue3IM7js9zO47P8zuOz/M7js/zO47PYzuu+YnJUAWpuUAMCakwD4mpMA/5qTAP+akwD/mpMA/5qT
        AP+akwD/mpMA/JuUAM+clQBjnpcADJ2VAACppQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAA2xfgAAAAxADS98RM0u+9MM7ruiTS67qczuu6YM7vvUDS98wuWkgAAnpcAEZyVAFOblACfm5QAzpuU
        AOOblADlm5QA1puUAK2clQBknZYAGs3MAACgmQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAADvK/wA7yv8AOMb9AjnI/gE4x/4AAAAAAAAAAAAAAAAAnpcAAKCZ
        AAOdlgASnZUAIp2WACSdlgAXn5gABZmSAACspwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////////////////x////8f///+D////gf///wH///4A///+AH///A
        A///gAH//wAB//8AAP/+AAB//AAAP/wAAD/4AAAf8AAAD/AAAAfgAAADwAAAA4AAAAGAAGAAAAD4AAAD
        /gAAB/+AgB//8+B///////////////////8=
</value>
  </data>
</root>